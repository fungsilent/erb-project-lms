<div class="p-4">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/dashboard">Home</a></li>
        <li class="breadcrumb-item"><a href="/attendance">Attendance</a></li>
        <li class="breadcrumb-item active">Mark</li>
    </ol>
    <div class="card">
        <div class="card-body">
            <h4 class="card-title">Mark Attendance</h4>
            <h5>Course: <span id="courseName"></span></h5>
            <form id="markAttendanceForm">
                <div class="form-group">
                    <label for="attendanceDate">Date:</label>
                    <select id="attendanceDate" name="date" class="form-control">
                        <template id="attendanceOption">
                            <option value="${value}">${text}</option>
                        </template>
                    </select>
                </div>
                <table class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <th>Student Name</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody id="studentsList">
                        <template id="studentItem">
                            <tr>
                                <td>${name}</td>
                                <td>
                                    <select name="status_${studentId}" class="form-control" data-student="${studentId}">
                                        <option value="present">Present</option>
                                        <option value="absent">Absent</option>
                                        <option value="late">Late</option>
                                    </select>
                                </td>
                            </tr>
                        </template>
                    </tbody>
                </table>
                <button type="submit" class="btn btn-primary">Save Attendance</button>
            </form>
        </div>
    </div>
</div>

<script>
    $(document).ready(() => {
        const { courseId } = $.getUrlParameter('/attendance/mark/:courseId')

        const getCousreDays = course => {
            let current = moment(course.startDate)
            let days = []
            while (current.isBefore(course.endDate)) {
                days.push(current.format('YYYY-MM-DD'))
                current.add(1, 'days')
            }
            const excludeDates = course.excludeDates.map(date => moment(date).format('YYYY-MM-DD'))
            return _.difference(days, excludeDates)
        }

        axios.get(`/api/attendance/${courseId}`).then(({ data: response }) => {
            console.log('response', response)
            if (!response.success) {
                alert(`Error fetching course details: ${response.message}`)
            }
            const course = response.data

            $('#courseName').text(course.name)
            const courseDays = getCousreDays(course)
            courseDays.forEach(day => {
                $.cloneTemplate('#attendanceOption', {
                    value: day,
                    text: day,
                })
            })

            let selected = moment().format('YYYY-MM-DD')
            if (!courseDays.includes(selected)) {
                selected = courseDays[0]
            }
            $('#attendanceDate').val(selected).change()

            course.students.forEach(student => {
                $.cloneTemplate('#studentItem', {
                    studentId: student._id,
                    name: student.name,
                })
            })
        })

        $('#attendanceDate').on('change', event => {
            const elem = $(event.target)
            axios.get(`/api/attendance/${courseId}/mark`, {
                params: {
                    date: moment(elem.val()).toISOString(true),
                }
            }).then(({ data: response }) => {
                console.log('response', response)
                if (!response.success) {
                    alert(`Error fetching attendance records: ${response.message}`)
                }
                
                const records = response.data
                if (records.length > 0) {
                    // have record, set value
                    records.forEach(record => {
                        $(`[data-student=${record.student}]`).val(record.status)
                    })
                } else {
                    // no record, reset value
                    $(`[data-student]`).val('present')
                }
            })
        })

        $('#markAttendanceForm').on('submit', event => {
            event.preventDefault()
            const records = $('[data-student]').map((index, elem) => {
                elem = $(elem)
                return {
                    id: elem.data('student'),
                    status: elem.val(),
                }
            }).get()

            const data = {
                date: moment($('#attendanceDate').val()).toISOString(true),
                records,
            }

            axios.post(`/api/attendance/${courseId}/mark`, data).then(({ data: response }) => {
                if (!response.success) {
                    alert(`Error: ${response.message}`)
                }
                alert('Save attendance successful')
            })
        })
    })
</script>
<%- contentFor('title') %>Mark Attendance
