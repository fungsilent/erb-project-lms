<div class="p-4">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/dashboard">Home</a></li>
        <li class="breadcrumb-item active">Assignments</li>
    </ol>
    <div class="card">
        <div class="card-body">
            <h4 class="card-title">Assignments List</h4>
            <a href="/assignments/add" class="btn btn-primary mb-3 admin hide">Add Assignment(s)</a>
            <table id="table" class="table table-striped table-bordered"></table>
            <template id="file">
                <a href="${url}" target="_blank" class="btn btn-outline-secondary btn-sm">Link</a>
            </template>
            <template id="mark">
                <a href="/assignments/mark/${id}" class="btn btn-secondary btn-sm">Mark assignment</a>
            </template>
            <template id="action">
                <a href="/assignments/edit/${id}" class="btn btn-secondary btn-sm">Edit</a>
                <button class="btn btn-danger btn-sm delete-course" data-id="${id}">Delete</button>
            </template>
        </div>
    </div>
</div>
<script>
    $(document).ready(() => {
        const table = $('#table').DataTable({
            ordering: true,
            searching: true,
            paging: false,
            ajax: '/api/assignments',
            columns: [
                { title: 'Course Name', data: 'courseId.name' },
                { title: 'Assignment Name', data: 'name' },
                { title: 'Teacher', data: 'courseId.teacher.name' },
                { 
                    title: 'School Day', 
                    data: 'schDay',
                    render: (data, type, row, meta) => {
                        const startDate = moment(row.courseId.startDate).format('DD/MM/YYYY')
                        const endDate = moment(row.courseId.endDate).format('DD/MM/YYYY')
                        return `${startDate} - ${endDate}`
                    },
                },
                { 
                    title: 'Due Date', 
                    data: 'dueDate',
                    render: (data, type, row, meta) => moment(data).format('DD/MM/YYYY')
                },
                {
                    title: 'File',
                    data: 'fileUrl',
                    render: (data, type, row, meta) => {
                        return $.cloneTemplate('#file', {
                            url: data,
                        }, {
                            insert: false,
                            html: true,
                        })
                    },
                },
                {
                    title: 'Marks',
                    data: '_id',
                    render: (data, type, row, meta) => {
                        return $.cloneTemplate('#mark', {
                            id: data,
                        }, {
                            insert: false,
                            html: true,
                        })
                    },
                },
                { 
                    title: 'Action', 
                    data: '_id',
                    render: (data, type, row, meta) => {
                        return $.cloneTemplate('#action', {
                            id: data,
                        }, {
                            insert: false,
                            html: true,
                        })
                    },
                },
            ],
        })

        $(document).on('click', '.delete-assignment', event => {
            if (confirm('Are you sure you want to delete this assignment?')) {
                const assignmentId = $(event.target).data('id')
                console.log(assignmentId)

                axios.delete(`/api/assignments/${assignmentId}`).then(({ data: response }) => {
                    if (!response.success) {
                        alert(`An error occurred: ${response.message}`)
                    }
                    location.reload()
                })
            }
        })
    })
</script>
<%- contentFor('title') %>Assignments List
