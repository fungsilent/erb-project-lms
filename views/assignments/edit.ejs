<div class="container mt-4">
    <h2>Edit Assignment</h2>
    <form id="editAssignmentForm" enctype="multipart/form-data">
        <div class="form-group">
            <label for="assignmentName">Name:</label>
            <input type="text" class="form-control" id="assignmentName" name="name" required>
        </div>
        <div class="form-group">
            <label for="dueDate">Due Date:</label>
            <input type="text" class="form-control due-date" id="dueDate" name="dueDate" required>
        </div>
        <div class="form-group">
            <label for="totalMarks">Total Marks:</label>
            <input type="number" class="form-control" id="totalMarks" name="totalMarks" required>
        </div>
        <div class="form-group">
            <label for="passingMarks">Passing Marks:</label>
            <input type="number" class="form-control" id="passingMarks" name="passingMarks" required>
        </div>
        <div class="form-group">
            <label>Current File:</label>
            <p id="currentFile"></p>
        </div>
        <div class="form-group">
            <label for="assignmentFile">New Assignment File:</label>
            <input type="file" class="form-control" id="assignmentFile" name="assignments">
        </div>
        <button type="submit" class="btn btn-primary mt-2">Save Changes</button>
    </form>
</div>

<script>
    $(document).ready(function() {
        const assignmentId = window.location.pathname.split('/').pop();

        $.ajax({
            url: `/api/assignments/${assignmentId}/edit`,
            method: 'GET',
            success: response => {
                if (response.success) {
                    const assignment = response.data;
                    $('#assignmentName').val(assignment.name);
                    $('#dueDate').val(new Date(assignment.dueDate).toISOString().slice(0, 10));
                    $('#totalMarks').val(assignment.totalMarks);
                    $('#passingMarks').val(assignment.passingMarks);
                    $('#currentFile').text(assignment.fileUrl ? assignment.fileUrl.split('/').pop() : 'No file uploaded');
                    $('.due-date').flatpickr({ dateFormat: 'Y-m-d' });
                } else {
                    alert(`An error occurred: ${response.message}`);
                }
            },
            error: err => {
                alert(`An error occurred: ${err.responseText}`);
            }
        });

        $('#editAssignmentForm').on('submit', function(event) {
            event.preventDefault();
            const formData = new FormData(this);

            fetch(`/api/assignments/${assignmentId}`, {
                method: 'PUT',
                body: formData,
                headers: {
                    'Authorization': `Bearer ${localStorage.getItem('token')}` 
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('Assignment updated successfully');
                    window.location.href = '/assignments';
                } else {
                    alert('Error: ' + data.message);
                }
            })
            .catch(error => {
                alert('An error occurred. Please try again.');
            });
        });
    });
</script>
<%- contentFor('title') %>Edit Assignment
