<div class="p-4">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/dashboard">Home</a></li>
        <li class="breadcrumb-item"><a href="/course">Course</a></li>
        <li class="breadcrumb-item active">Detail</li>
    </ol>
    <h4 class="card-title">Course Details for <span id="courseName"></span></h4>

    <div class="card mb-4">
        <div id="courseDetails" class="card-body">
            <h4 class="card-title">Information</h4>
            <table class="table table-striped table-bordered">
                <tr><th>Name</th><td id="courseNameDetail"></td></tr>
                <tr><th>Teacher</th><td id="courseTeacher"></td></tr>
                <tr><th>Start Date</th><td id="courseStartDate"></td></tr>
                <tr><th>End Date</th><td id="courseEndDate"></td></tr>
                <tr><th>Exclude Dates</th><td id="courseExcludeDates"></td></tr>
                <tr><th>Number of Students</th><td id="courseStudentCount"></td></tr>
            </table>
        </div>
    </div>

    <div class="card mb-4">
        <div id="studentList" class="card-body">
            <h4 class="card-title">Student List</h4>
            <table class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Assignment Avg Marks</th>
                        <th>Attendance Ratio</th>
                    </tr>
                </thead>
                <tbody id="students"></tbody>
            </table>
        </div>
    </div>

    <div class="card mb-4">
        <div id="assignmentList" class="card-body">
            <h4 class="card-title">Assignment List</h4>
            <table class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Avg Marks</th>
                        <th>Due Date</th>
                        <th>Assignment Link</th>
                    </tr>
                </thead>
                <tbody id="assignments"></tbody>
            </table>
        </div>
    </div>

    <div class="card">
        <div class="card-body mb-4">
            <h4 class="card-title">Attendance</h4>
            <div class="row">
                <div class="col-md-6">
                    <div id="attendanceRatio" class="card border-warning mb-3">
                        <div class="card-header">Attendance Ratio</div>
                        <div class="card-body">
                            <canvas id="attendanceChart"></canvas>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div id="assignmentMarksRatio" class="card border-info mb-3">
                        <div class="card-header">Assignment Marks Ratio</div>
                        <div class="card-body">
                            <canvas id="marksChart"></canvas>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(() => {
        const courseId = window.location.pathname.split('/').pop();

        axios.get(`/api/course/details/${courseId}`).then(({ data: response }) => {
            if (!response.success) {
                return alert(`Error fetching course details: ${response.message}`)
            }
            const { course, assignments, attendanceRecords } = response;

            // Course Details
            $('#courseName').text(course.name)
            $('#courseNameDetail').text(course.name)
            $('#courseTeacher').text(course.teacher.name)
            $('#courseStartDate').text(new Date(course.startDate).toLocaleDateString())
            $('#courseEndDate').text(new Date(course.endDate).toLocaleDateString())
            $('#courseExcludeDates').text(course.excludeDates.map(date => moment(date).format('YYYY-MM-DD')).join(', '))
            $('#courseStudentCount').text(course.students.length)

            // Student List
            const studentMarks = {};
            assignments.forEach(assignment => {
                assignment.results.forEach(result => {
                    if (!studentMarks[result.studentId._id]) {
                        studentMarks[result.studentId._id] = { totalMarks: 0, count: 0 };
                    }
                    studentMarks[result.studentId._id].totalMarks += result.marks;
                    studentMarks[result.studentId._id].count++;
                });
            });

            const studentAttendance = {};
            attendanceRecords.forEach(record => {
                if (!studentAttendance[record.student._id]) {
                    studentAttendance[record.student._id] = { present: 0, total: 0 };
                }
                if (record.status === 'present') {
                    studentAttendance[record.student._id].present++;
                }
                studentAttendance[record.student._id].total++;
            });

            const studentList = $('#students');
            course.students.forEach(student => {
                const avgMarks = studentMarks[student._id] ? (studentMarks[student._id].totalMarks / studentMarks[student._id].count).toFixed(2) : 'N/A';
                const attendanceRatio = studentAttendance[student._id] ? ((studentAttendance[student._id].present / studentAttendance[student._id].total) * 100).toFixed(2) + '%' : 'N/A';

                studentList.append(`<tr>
                    <td>${student.name}</td>
                    <td>${student.email}</td>
                    <td>${avgMarks}</td>
                    <td>${attendanceRatio}</td>
                </tr>`);
            });

            // Assignment List
            const assignmentList = $('#assignments');
            assignments.forEach(assignment => {
                const totalMarks = assignment.results.reduce((acc, result) => acc + result.marks, 0);
                const avgMarks = (totalMarks / assignment.results.length).toFixed(2);

                assignmentList.append(`<tr>
                    <td>${assignment.name}</td>
                    <td>${avgMarks}</td>
                    <td>${new Date(assignment.dueDate).toLocaleDateString()}</td>
                    <td><a href="${assignment.fileUrl}" target="_blank">View Assignment</a></td>
                </tr>`);
            });

            // Attendance Ratio
            const attendanceStats = {
                present: 0,
                absent: 0,
                late: 0
            };
            attendanceRecords.forEach(record => {
                attendanceStats[record.status]++;
            });

            const attendanceCtx = document.getElementById('attendanceChart').getContext('2d');
            new Chart(attendanceCtx, {
                type: 'doughnut',
                data: {
                    labels: ['Present', 'Absent', 'Late'],
                    datasets: [{
                        data: [attendanceStats.present, attendanceStats.absent, attendanceStats.late],
                        backgroundColor: ['rgb(255, 99, 132)', 'rgb(54, 162, 235)', 'rgb(255, 205, 86)']
                    }]
                }
            });

            // Assignment Marks Ratio
            const marksStats = {
                passed: 0,
                failed: 0
            };

            assignments.forEach(assignment => {
                assignment.results.forEach(result => {
                    if (result.marks >= assignment.passingMarks) {
                        marksStats.passed++;
                    } else {
                        marksStats.failed++;
                    }
                });
            });

            const marksCtx = document.getElementById('marksChart').getContext('2d');
            new Chart(marksCtx, {
                type: 'doughnut',
                data: {
                    labels: ['Passed', 'Failed'],
                    datasets: [{
                        data: [marksStats.passed, marksStats.failed],
                        backgroundColor: ['rgb(54, 162, 235)', 'rgb(255, 99, 132)']
                    }]
                }
            })
        })
    })
</script>