<div class="p-4">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/dashboard">Home</a></li>
        <li class="breadcrumb-item active">Course</li>
    </ol>
    <div class="card">
        <div class="card-body">
            <h4 class="card-title">Courses</h4>
            <a href="/course/add" class="btn btn-primary mb-3 admin hide">Add Course</a>
            <table id="table" class="table table-striped table-bordered"></table>
            <template id="action">
                <td>
                    <a href="/course/student/${id}" class="btn btn-outline-secondary btn-sm hide student">View</a>
                    <a href="/course/detail/${id}" class="btn btn-outline-secondary btn-sm hide admin teacher">View</a>
                    <a href="/course/edit/${id}" class="btn btn-secondary btn-sm hide admin teacher">Edit</a>
                    <button class="btn btn-danger btn-sm delete-course hide admin" data-id="${id}">Delete</button>
                </td>
            </template>
        </div>
    </div>
</div>

<script>
    $(document).ready(() => {
        $(document).on('userInfoEvent', (event, user) => {
            const table = $('#table').DataTable({
                ordering: true,
                searching: true,
                paging: false,
                ajax: '/api/course',
                columns: [
                    { title: 'Course Name', data: 'name' },
                    { title: 'Teacher', data: 'teacher.name' },
                    { 
                        title: 'Start Date', 
                        data: 'startDate',
                        render: (data, type, row, meta) => moment(data).format('DD/MM/YYYY')
                    },
                    { 
                        title: 'End Date', 
                        data: 'endDate',
                        render: (data, type, row, meta) => moment(data).format('DD/MM/YYYY')
                    },
                    { 
                        title: 'Students', 
                        data: 'students',
                        render: (data, type, row, meta) => `${row.students.length}/${row.maxStudents}`
                    },
                    { 
                        title: 'Actions', 
                        data: '_id',
                        render: (data, type, row, meta) => {
                            return $.cloneTemplate('#action', {
                                id: data,
                            }, {
                                insert: false,
                                html: true,
                                role: user.role,
                            })
                        },
                    },
                ],
            })

            $(document).on('click', '.delete-course', async event => {
                const CourseConfirmed = await confirm('Are you sure you want to delete this course?');
                if (CourseConfirmed) {
                    const courseId = $(event.target).data('id')
                    axios.delete(`/api/course/${courseId}`).then(({ data: response }) => {
                        console.log('response', response)
                        if (!response.success) {
                            return alert(`An error occurred: ${response.message}`)
                        }
                        location.reload()
                    })
                }
            })
        })
    })
</script>
<%- contentFor('title') %>Course
