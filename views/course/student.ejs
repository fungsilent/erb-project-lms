<div class="p-4">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/dashboard">Home</a></li>
        <li class="breadcrumb-item"><a href="/course">Course</a></li>
        <li class="breadcrumb-item active" id="courseBreadcrumb"></li>
    </ol>
    <h4 class="card-title">Course Details for <span id="courseName"></span></h4>

    <div class="card mb-4">
        <div id="courseDetails" class="card-body">
            <h4 class="card-title">Course Information</h4>
            <table class="table table-striped table-bordered">
                <tr><th>Name</th><td id="courseNameDetail"></td></tr>
                <tr><th>Teacher</th><td id="courseTeacher"></td></tr>
                <tr><th>Start Date</th><td id="courseStartDate"></td></tr>
                <tr><th>End Date</th><td id="courseEndDate"></td></tr>
                <tr><th>Exclude Dates</th><td id="courseExcludeDates"></td></tr>
            </table>
        </div>
    </div>
    
    <div class="card mb-4">
        <div id="assignmentList" class="card-body">
            <h4 class="card-title">Assignment List</h4>
            <table class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Marks</th>
                        <th>Due Date</th>
                        <th>Assignment Link</th>
                        <th>Submitted Assignment</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody id="assignments">
                    <template id="assignmentItem">
                        <tr>
                            <td>${name}</td>
                            <td>${marks}</td>
                            <td>${dueDate}</td>
                            <td><a href="${assignmentFileUrl}" target="_blank">View Assignment</a></td>
                            <td>
                                <a href="/api/download/assignment/${id}?token=${token}" target="_blank" class="student-file hide">${studentFileName}</a>
                                <span class="no-student-file hide">N/A</span>
                            </td>
                            <td>
                                <button class="btn btn-primary edit-assignment hide" data-assignment-id="${id}">Edit Assignment</button>
                                <button class="btn btn-primary upload-assignment hide" data-assignment-id="${id}">Upload Assignment</button>
                            </td>
                        </tr>
                    </template>
                </tbody>
            </table>
        </div>
    </div>

    <div class="card mb-4">
        <div id="attendanceList" class="card-body">
            <h4 class="card-title">Attendance List</h4>
            <div class="row pt-2 pb-2 mb-2">
                <div class="col text"><b>Attendance Ratio</b></div>
                <div class="col"><span id="studentAttendanceRatio"></span></div>
            </div>
            <table class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody id="attendances">
                    <template id="attendanceItem">
                        <tr>
                            <td>${date}</td>
                            <td>${status}</td>
                        </tr>
                    </template>
                </tbody>
            </table>
        </div>
    </div>

    <div class="card">
        <div class="card-body mb-4">
            <h4 class="card-title">Statisic</h4>
            <div class="row">
                <div class="col">
                    <div id="attendanceRatio" class="card border-warning mb-3">
                        <div class="card-header">Attendance Ratio</div>
                        <div class="card-body">
                            <canvas id="attendanceChart"></canvas>
                        </div>
                    </div>
                </div>
                <div class="col">
                    <div id="assignmentMarksRatio" class="card border-info mb-3">
                        <div class="card-header">Assignment Marks Ratio</div>
                        <div class="card-body">
                            <canvas id="marksChart"></canvas>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Hidden file input field -->
    <input type="file" id="assignmentFileInput" style="display: none;">
</div>

<script>
    $(document).ready(() => {
        const { courseId } = $.getUrlParameter('/course/student/:courseId')

        axios.get(`/api/course/student/${courseId}`).then(({ data: response }) => {
            console.log('response', response)
            if (!response.success) {
                return alert(`Error fetching course details: ${response.message}`)
            }
            const { course, assignments, attendance } = response.data;
            displayCourseDetails(course)
            displayAssignmentList(assignments)
            displayAttendanceList(attendance)
            displayAttendanceChart(attendance.list)
            displayMarksChart(assignments)
        })
        

        // Handle file input change
        $('#assignmentFileInput').on('change', function() {
            const file = this.files[0];
            if (file) {
                const assignmentId = $(this).data('assignmentId');
                const formData = new FormData();
                formData.append('assignment', file);
                formData.append('assignmentId', assignmentId);

                axios.post('/api/course/student/assignment/upload', formData).then(({ data: response }) => {
                    if (!response.success) {
                        return alert(`Error uploading assignment: ${response.message}`);
                    }
                    location.reload(); // Reload the page to update the assignment list
                })
            }
        });


        // Handle upload and edit buttons
        $(document).on('click', '.upload-assignment, .edit-assignment', () => {
            const assignmentId = $(event.target).data('assignment-id');
            $('#assignmentFileInput').data('assignmentId', assignmentId).click();
        });

        const displayCourseDetails = course => {
            $('#courseName').text(course.name);
            $('#courseNameDetail').text(course.name);
            $('#courseTeacher').text(course.teacher.name);
            $('#courseStartDate').text(new Date(course.startDate).toLocaleDateString());
            $('#courseEndDate').text(new Date(course.endDate).toLocaleDateString());
            $('#courseExcludeDates').text(course.excludeDates.map(date => new Date(date).toLocaleDateString()).join(', '));
            //breadcrumb
            $('#courseBreadcrumb').text(course.name);

        }

        const displayAssignmentList = assignments => {
            assignments.forEach(assignment => {
                $.cloneTemplate('#assignmentItem', {
                    ...assignment,
                    assignmentFileUrl: assignment.fileUrl,
                    marks: assignment.marks === -1 ? 'N/A' : assignment.marks,
                    dueDate: moment(assignment.dueDate).local().format('DD-MM-YYYY'),
                    id: assignment._id,
                    token: localStorage.getItem('token'),
                }, {
                    show: [
                        assignment.studentFileUrl ? 'student-file' : 'no-student-file',
                        assignment.studentFileUrl ? 'edit-assignment' : 'upload-assignment',
                    ]
                })
            });
        }

        const displayAttendanceList = attendance => {
            $('#studentAttendanceRatio').text(`${attendance.ratio}%`)
            attendance.list.forEach(record => {
                $.cloneTemplate('#attendanceItem', {
                    ...record,
                    date: moment(record.date).local().format('DD-MM-YYYY'),
                })
            })
        }

        const displayAttendanceChart = list => {
            const attendanceStats = {
                present: 0,
                absent: 0,
                late: 0
            }
            list.forEach(record => attendanceStats[record.status]++)

            const attendanceCtx = document.getElementById('attendanceChart').getContext('2d');
            new Chart(attendanceCtx, {
                type: 'doughnut',
                data: {
                    labels: ['Present', 'Absent', 'Late'],
                    datasets: [{
                        data: [attendanceStats.present, attendanceStats.absent, attendanceStats.late],
                        backgroundColor: ['rgb(255, 99, 132)', 'rgb(54, 162, 235)', 'rgb(255, 205, 86)']
                    }]
                }
            });
        }

        const displayMarksChart = assignments => {
            const assignmentNames = assignments.map(assignment => assignment.name)
            const studentMarks = assignments.map(assignment => assignment.marks === -1 ? 0 : assignment.marks)
        
            const marksCtx = document.getElementById('marksChart').getContext('2d');
            new Chart(marksCtx, {
                type: 'bar',
                data: {
                    labels: assignmentNames,
                    datasets: [{
                        label: 'Marks',
                        data: studentMarks,
                        backgroundColor: 'rgb(54, 162, 235)'
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true,
                            max: 100
                        }
                    }
                }
            });
        }
    })

</script>
<%- contentFor('title') %>Course Detail
