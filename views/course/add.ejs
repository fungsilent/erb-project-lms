<div class="p-4">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/dashboard">Home</a></li>
        <li class="breadcrumb-item"><a href="/course">Course</a></li>
        <li class="breadcrumb-item active">Add</li>
    </ol>
    <div class="card">
        <div class="card-body">
            <h4 class="card-title">Add Course</h4>
            <form id="addCourseForm">
                <div class="form-group">
                    <label for="course_name">Course Name:</label>
                    <input
                        type="text"
                        class="form-control"
                        id="course_name"
                        name="name"
                        required
                    />
                </div>
                <div class="form-group">
                    <label for="description">Description:</label>
                    <textarea
                        class="form-control"
                        id="description"
                        name="description"
                        rows="3"
                    ></textarea>
                </div>
                <div class="form-group">
                    <label for="teacher">Teacher:</label>
                    <select class="form-control" id="teacher" name="teacher" required>
                        <template id="teacherOption">
                            <option value="${value}">${text}</option>
                        </template>
                    </select>
                </div>
                <div class="form-group">
                    <label for="startDate">Start Date:</label>
                    <input
                        type="text"
                        class="form-control"
                        id="startDate"
                        name="startDate"
                        required
                    />
                </div>
                <div class="form-group">
                    <label for="endDate">End Date:</label>
                    <input
                        type="text"
                        class="form-control"
                        id="endDate"
                        name="endDate"
                        required
                    />
                </div>
                <div class="form-group">
                    <label for="maxStudents">Max Students:</label>
                    <input
                        type="number"
                        class="form-control"
                        id="maxStudents"
                        name="maxStudents"
                        required
                    />
                </div>
                <div class="form-group">
                    <label for="excludeDates">Exclude Specific Dates:</label>
                    <input
                        type="text"
                        class="form-control"
                        id="excludeDates"
                        name="excludeDates"
                        placeholder="Select dates"
                    />
                </div>
                <div class="form-group">
                    <label for="students">Assign Students:</label>
                    <select multiple class="form-control" id="students" name="students">
                        <template id="studentOption">
                            <option value="${value}">${text}</option>
                        </template>
                    </select>
                </div>

                <!--add course color-->
                <div class="form-group">
                    <label for="color">Select Color:</label>
                    <input
                        type="color"
                        class="form-control form-control-color"
                        id="color"
                        name="color"
                        value="#E1E2F6"
                        required
                    />
                </div>
                 <!--add course title color-->
                 <div class="form-group">
                    <label for="color">Select Title Color:</label>
                    <input
                        type="color"
                        class="form-control form-control-color"
                        id="titleColor"
                        name="titleColor"
                        value="#6C757D"
                        required
                    />    
                </div>

                <button type="submit" class="btn btn-primary">Add</button>
            </form>
        </div>
    </div>
</div>
<script>
    $(document).ready(() => {
        $('#students').select2()

        const startDatePicker = $('#startDate').flatpickr({
            dateFormat: 'Y-m-d',
            onChange: function(selectedDates, dateStr, instance) {
                if (endDatePicker.selectedDates.length > 0 && selectedDates[0] > endDatePicker.selectedDates[0]) {
                    alert('Start date cannot be after end date.');
                    instance.clear();
                } else {
                    endDatePicker.set('minDate', dateStr);
                }
            }
        });

        const endDatePicker = $('#endDate').flatpickr({
            dateFormat: 'Y-m-d',
            onChange: function(selectedDates, dateStr, instance) {
                if (startDatePicker.selectedDates.length > 0 && selectedDates[0] < startDatePicker.selectedDates[0]) {
                    alert('End date cannot be before start date.');
                    instance.clear();
                } else {
                    excludeDatesPicker.set('maxDate', dateStr);
                }
            }
        });

        const excludeDatesPicker = $('#excludeDates').flatpickr({
            mode: 'multiple',
            dateFormat: 'Y-m-d',
            onChange: function(selectedDates, dateStr, instance) {
                const startDate = startDatePicker.selectedDates[0];
                const endDate = endDatePicker.selectedDates[0];
                if (startDate && endDate) {
                    selectedDates.forEach(date => {
                        if (date < startDate || date > endDate) {
                            alert('Exclude dates must be within the start and end dates.');
                            instance.clear();
                        }
                    });
                }
            }
        });

        axios.get('/api/course/option').then(({ data: response }) => {
            console.log('response', response)
            if (!response.success) return
            const { teachers, students } = response.data
            teachers.forEach(teacher => {
                $.cloneTemplate('#teacherOption', {
                    text: teacher.name,
                    value: teacher._id
                })
            })
            students.forEach(student => {
                $.cloneTemplate('#studentOption', {
                    text: student.name,
                    value: student._id
                })
            })
        })

        $('#addCourseForm').on('submit', event => {
            event.preventDefault();
            const data = $.getFormData('#addCourseForm');
            const maxStudents = parseInt(data.maxStudents);
            const assignedStudents = data.students ? data.students.length : 0;

            if (assignedStudents > maxStudents) {
                return alert('Assigned students cannot be more than max students.')
            }

            axios.post('/api/course/add', data).then(({ data: response }) => {
                console.log('response', response);
                if (!response.success) {
                    return alert(`An error occurred: ${response.message}`);
                }
                window.location.href = '/course';
            });
        });
    })
</script>
<%- contentFor('title') %>Add Course
