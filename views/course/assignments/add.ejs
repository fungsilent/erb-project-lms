<div class="p-4">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/dashboard">Home</a></li>
        <li class="breadcrumb-item"><a href="/course">Course</a></li>
        <li class="breadcrumb-item"><a href=# id="courseBreadcrumb"></a></li>
        <li class="breadcrumb-item active">Add Assignment</li>
    </ol>
    <h5 class="mb-2 text-muted" id="courseName"></h5>
    <h4>Add Assignment</h4>
    <form id="addAssignmentsForm" enctype="multipart/form-data">
        <template id="assignmentTemplate">
            <div class="card mb-3">
                <div class="card-body">              
                        <div class="assignment-form">
                            <h4>Assignment ${assignmentCount}</h4>
                            <div class="form-group">
                                <label for="name_${assignmentCount}">Name:</label>
                                <input type="text" class="form-control" id="name_${assignmentCount}" name="name" required>
                            </div>
                            <div class="form-group">
                                <label for="dueDate_${assignmentCount}">Due Date:</label>
                                <input type="text" class="form-control due-date" id="dueDate_${assignmentCount}" name="dueDate" required>
                            </div>
                            <div class="form-group">
                                <label for="totalMarks_${assignmentCount}">Total Marks:</label>
                                <input type="number" class="form-control" id="totalMarks_${assignmentCount}" name="totalMarks" required>
                            </div>
                            <div class="form-group">
                                <label for="passingMarks_${assignmentCount}">Passing Marks:</label>
                                <input type="number" class="form-control" id="passingMarks_${assignmentCount}" name="passingMarks" required>
                            </div>
                            <div class="form-group">
                                <label for="assignment_${assignmentCount}">Assignment File:</label>
                                <input type="file" class="form-control" id="assignment_${assignmentCount}" name="assignments" required>
                            </div>
                        </div>
                </div>
            </div>
        </template>
        <button type="button" id="addMoreAssignments" class="btn btn-secondary mt-2">Add More Assignment</button>
        <button type="submit" class="btn btn-primary mt-2">Save Assignments</button>
    </form>
</div>

<script>
    $(document).ready(() => {
        const { courseId } = $.getUrlParameter('/course/assignments/add/:courseId')

        let assignmentCount = 0;
        const addAssignment = () => {
            assignmentCount++;
            const elem = $.cloneTemplate('#assignmentTemplate', {
                assignmentCount: assignmentCount
            }, { insert: false });
            $('#assignmentTemplate').before(elem);
            elem.find('.due-date').flatpickr({ dateFormat: 'Y-m-d' });
        }
        // create one by default
        addAssignment()

        axios.get(`/api/course/${courseId}`).then(({ data: response }) => {
            console.log('response', response)
            if (!response.success) {
                return alert(`An error occurred: ${response.message}`);
            }
            const course = response.data;   
            $('#courseName').text(course.name);

            //breadcrumb
            $('#courseBreadcrumb').text(course.name).attr('href', `/course/detail/${course._id}`);
        })

        $('#addMoreAssignments').on('click', addAssignment);

        $('#addAssignmentsForm').on('submit', event => {
            event.preventDefault();

            const formData = new FormData(event.target);
            const files = document.querySelectorAll('input[type="file"]');

            files.forEach((fileInput, index) => {
                console.log(`File input ${index}:`, fileInput.files);
            });

            formData.append('course', courseId);     


            axios.post('/api/assignments/upload', formData).then(({ data: response }) => {
                if (!response.success) {
                    return console.error('Upload failed:', response.message);
                }
                console.log('Upload successful:', response);
                window.location.href = `/course/detail/${courseId}`;
            })
        });
    });
</script>
<%- contentFor('title') %>Add Assignment