<div class="p-4">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/dashboard">Home</a></li>
        <li class="breadcrumb-item"><a href="/course">Course</a></li>
        <li class="breadcrumb-item"><a href=# id="courseBreadcrumb"></a></li>
        <li class="breadcrumb-item active" id="assignmentBreadcrumb"></li>

    </ol>
    <div class="card">
        <div class="card-body">
            <h5 class="card-subtitle mb-2 text-muted" id="courseName"></h5>
            <h4 class="card-title" id="assignmentName"></h4>
            <form id="markAssignmentForm">
                <div id="studentsContainer">
                    <div class="mt-4">
                        <h4>Student List</h4>
                        <div class="form-group">
                            <table class="table table-striped table-bordered">
                                <thead>
                                    <tr>
                                        <th>Student Name</th>
                                        <th>Student Email</th>
                                        <th>Marks</th>
                                        <th>Submitted Assignment</th>
                                    </tr>
                                    <tbody class="student-form">
                                        <!-- student rows -->
                                        <template id="studentItem">
                                            <tr>
                                                <td>${name}</td>
                                                <td>${email}</td>
                                                <td>
                                                    <input type="number" class="form-control" id="marks_${index}" name="marks" data-student-id="${id}" value="${markValue}">
                                                </td>
                                                <td>
                                                    <a href="${fileUrl}" target="_blank" class="file-link hide">View Submission</a>
                                                    <span class="no-file hide">N/A</span>
                                                </td>
                                            </tr>
                                        </template>
                                    </tbody>
                                </thead>
                            </table>
                        </div>          
                    </div>
                </div>
                <button type="submit" class="btn btn-primary mt-2">Submit Marks</button>
            </form>
        </div>
    </div>

<script>
    $(document).ready(() => {
        const { assignmentId } = $.getUrlParameter('/course/assignments/mark/:assignmentId')

        axios.get(`/api/assignments/${assignmentId}`).then(({ data: response }) => {
                console.log('response', response)
                if (!response.success) {
                    return alert(`An error occurred: ${response.message}`);
                }
                const assignment = response.data;
                $('#assignmentName').text(`Assignment: ${assignment.name}`);
                $('#courseName').text(`Course: ${assignment.course.name}`);

                // breadcrumb
                $('#courseBreadcrumb').text(assignment.course.name).attr('href', `/course/detail/${assignment.course._id}`);
                $('#assignmentBreadcrumb').text(`Mark ${assignment.name}`);

                const studentsContainer = $('#studentsContainer .student-form');

                assignment.course.students.forEach((student, index) => {
                    const studentMark = assignment.results.find(result => result.studentId === student._id)
                    const fileUrl = studentMark?.studentFileUrl
                    let data = {
                        ...student,
                        id: student._id,
                        index,
                        markValue: studentMark?.marks,
                        fileUrl: studentMark?.studentFileUrl,
                    }
                    const elem = $.cloneTemplate('#studentItem', {
                        ...student,
                        id: student._id,
                        index,
                        fileUrl,
                        markValue: studentMark?.marks,
                    }, {
                        show: [
                            fileUrl ? 'file-link' : 'no-file'
                        ]
                    })
                });
            })

        $('#markAssignmentForm').on('submit', event => {
            event.preventDefault();
            const marks = [];
            const courseId = $('#courseBreadcrumb').attr('href').split('/').pop();

            $('#markAssignmentForm [name="marks"]').each((index, elem) => {
                elem = $(elem)
                marks.push({
                    studentId: elem.data('student-id'),
                    marks: elem.val()
                });
            });

            axios.put(`/api/assignments/${assignmentId}/mark`, { marks }).then(({ data: response }) => {
                if (!response.success) {
                    return alert(response.message);
                }
                alert('Marks submitted successfully');
                window.location.href = `/course/detail/${courseId}`;
            })
        });
    });
</script>
<%- contentFor('title') %>Mark Assignment
