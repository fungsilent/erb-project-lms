<div class="p-4">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/dashboard">Home</a></li>
        <li class="breadcrumb-item"><a href="/announcement">Announcement</a></li>
        <li class="breadcrumb-item active">Edit</li>
    </ol>
    <div class="card">
        <div class="card-body">
            <h4 class="card-title">Edit Announcement</h4>
            <form id="editAnnouncementForm">
                <div class="form-group">
                    <label for="content">Content:</label>
                    <textarea
                        class="form-control"
                        name="content"
                        rows="3"
                    ></textarea>
                </div>
                <div class="form-group">
                    <label for="teacher">To:</label>
                    <select class="form-control" name="to" required>
                        <option value="all">All</option>
                        <option value="teacher">Teacher</option>
                        <option value="student">Student</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="date">Date:</label>
                    <input type="text" class="form-control" name="date" disabled>
                </div>
                <button type="submit" class="btn btn-primary">Save</button>
                <button type="button" class="btn btn-danger delete" data-id="${_id}">Delete</button>
            </form>
        </div>
    </div>
</div>

<script>
    $(document).ready(() => {
        const { id } = $.getUrlParameter('/announcement/edit/:id')

        axios.get(`/api/announcement/${id}`).then(({ data: response }) => {
            if (!response.success) return
            const announcement = response.data
            $.setFormData('#editAnnouncementForm', {
                ...announcement,
                date: moment(announcement.date).format('DD/MM/YYYY h:mm'),
                to: _.findKey(announcement.to, b => b),
            })
        })

        $('#editAnnouncementForm').on('submit', event => {
            event.preventDefault()
            const data = $.getFormData('#editAnnouncementForm')
            axios.put(`/api/announcement/${id}`, data).then(({ data: response }) => {
                console.log('response', response)
                if (!response.success) {
                    return alert(`An error occurred: ${response.message}`)
                }
                const announcement = response.data
                $.setFormData('#editAnnouncementForm', {
                    ...announcement,
                })
                window.location.href = '/announcement'
            })
        })

        $('.delete').click(async event => {
            const AnnouncementConfirmed = await confirm('Are you sure you want to delete this announcement?');
            if (AnnouncementConfirmed) {
                axios.delete(`/api/announcement/${id}`).then(({ data: response }) => {
                    console.log('response', response)
                    if (!response.success) {
                        return alert(`An error occurred: ${response.message}`)
                    }
                    window.location.href = '/announcement'
                })
            }
        })
    })

</script>
<%- contentFor('title') %>Edit Announcement